// Generated by ../levels/combiner.py
import { Graph } from "./GDM-TS";
import {CustomNode } from "./customNode";
import { KEY_DEATH, KEY_END, KEY_START } from "../core/constants";

// ========= Nodes =========
export const MDP = new Graph();

MDP.addNode(new CustomNode(KEY_START, 0, 0, false, [], [], -1));
MDP.addNode(new CustomNode(KEY_DEATH, -1, 0, true, [], [], -1));
MDP.addNode(new CustomNode("l_h_v", -2.4, 0, false, [], [["---------------------", "---------------------", "----------o----------", "---------------------", "---------XXX---------", "---------XXX---------", "------XX^XXX^XX------", "---------------------", "----------o----------", "-----X--H-----HX-----", "----XXXXXXXXXXXXX----", "-----V----o----V-----", "---------------------", "---------------------", "XXXXXXXXXXXXXXXXXXXXX"], ["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "--------------XXXXX--", "--------------V---V--", "----------------o----", "-----X-H---HX--------", "XXXX^XXXXXXXXXXXXXXXX"]],9));
MDP.addNode(new CustomNode("l_h", -2.5, 0, false, [], [["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------oo----------", "-------^XXXX^--------", "---------------------", "-------o----o--------", "-----X----H---X------", "XXXXXXXXXXXXXXXXXXXXX"], ["----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------o-----------", "-------X---H-X--------", "-------X--H--X--------", "-----XXXXXXXXXXX------", "----------------------", "---------ooo----------", "----------------------", "XXXXXXXX^XXX^XXXXXXXXX"], ["----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "----------------------", "------------------o---", "---X-X----------------", "---X^X-----H------X---", "--XXXX--H-----H---X---", "XXXXXXXXXXXXXXXXXXXXXX"]],8));
MDP.addNode(new CustomNode("jump", -3.0, 0, false, [], [["----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "-------oo-------", "----------------", "------XXXX------", "----XXXXXXXX----", "--XXXXXXXXXXXX--", "XXXXXXXXXXXXXXXX"], ["----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "---------oo-----", "----------------", "---------XX-----", "-------XXXXX----", "-----XXXXXXXX---", "---XXXXXXXXXXX--", "XXXXXXXXXXXXXXXX"], ["------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "------------------", "--------oo--------", "----XX------XX----", "--XXXXXX--XXXXXX--", "XXXXXXXXXXXXXXXXXX"]],3));
MDP.addNode(new CustomNode("h", -2.8, 0, false
MDP.addNode(new CustomNode("l", -2.6, 0, false
MDP.addNode(new CustomNode("c", -2.0, 0, false
MDP.addNode(new CustomNode("t", -2.0, 0, false
MDP.addNode(new CustomNode("bb", -1.6, 0, false, [], [["-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "------b------", "-------------", "XXX-------XXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-------b------", "--------------", "--------------", "--XX-------XXX", "--X-----------", "XXX-----------"]],14));
MDP.addNode(new CustomNode("p_v", -1.0, 0, false, [], [["------------------XXX", "------------------XXX", "------------------XXX", "-------------o----XXX", "------------------XXX", "-----------XXXX---XXX", "------------------XXX", "------------V-----XXX", "----XXXXXX--------XXX", "-----V------------XXX", "XXX------o--------XXX", "---------------V-----", "-----XXXXXXXX--------", "---------------------", "XXX-----------XXXXXXX"], ["---------------------", "----V--V-o-V-----V---", "---------------------", "XX----XXXXXXX-----V--", "---------------------", "--------------XX-----", "XXX------------------", "---------------------", "o----------------V---", "----XXX--------------", "--V------------------", "---------------------", "XX-------------------", "---------------------", "XXX-------------XXXXX"]],15));
MDP.addNode(new CustomNode("2", -3.1, 0, false, [], [["----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "----------------", "-------o--------", "XXXXXXXXXXXXXXXX"], ["--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "--------------------", "-----------o--------", "XXXXXXXXXXXXXXXXXXXX"]],2));
MDP.addNode(new CustomNode("p_v_h", -1.7, 0, false, [], [["-------------------------------", "-------------------------------", "-------------------------------", "-------------------------------", "-------------------------------", "-------------------o-----------", "-------------------------------", "-------------------X-----------", "-------------XX----------------", "-------------------V-----------", "----------X--------------------", "----------V--------------------", "--------o---------oV-----------", "--X-H----------H----------H---X", "XXX----XXXX----XXXXX---X-X--XXX"], ["-------------------------------", "----------V---V----------------", "------------o------------------", "-------------------------------", "-----------XXXX----------------", "-------------------------------", "-------XX----------------------", "-------------------------------", "----------XX-------------------", "--------------------o----------", "-------X-----------------------", "X---H----------H---------H----X", "----XXX---XX--XXX--XX---XXX----", "-------------------------------", "XXX-------------------------XXX"], ["------------------------------X", "----------V---V---------------X", "------------o-----------------X", "------------------------------X", "-----------XXXX--------------oX", "-----------------X-------H----X", "-------XX--------X--H------H--X", "-----------------XXXXXXXXXXXXXX", "----------XX-------------------", "-------------------------------", "-------X-----------------------", "X---H---H--X------------ooo----", "----XXX---XXXXXXXXXXXXXXXXX----", "-------------------------------", "XXX-------------------------XXX"]],17));
MDP.addNode(new CustomNode("1", -3.2, 0, false, [], [["-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "-------", "XXXXXXX"], ["--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "--------", "XXXXXXXX"]],1));
MDP.addNode(new CustomNode("p", -1.6, 0, false, [], [["------------------XXX", "------------------XXX", "------------------XXX", "-------------o----XXX", "------------------XXX", "-----------XXXX---XXX", "------------------XXX", "--------X---------XXX", "----XX------------XXX", "------------------XXX", "--X------o--------XXX", "---------------------", "-----XXXXX-----------", "---------------------", "XXX-----------XXXXXXX"], ["---------------------", "---------o-----------", "---------------------", "XX----XXXXXXX--------", "---------------------", "----------------XX---", "XXXX-----------------", "X-------X------------", "Xo-----XX------------", "X-----XXX------------", "XX---XXXX------------", "---------------------", "---------------------", "---------------------", "XXXX------------XXXXX"], ["---------------------", "---------------------", "-o-------------------", "---------------------", "XXX------------------", "---------------------", "---------------------", "----XX---------------", "---------X-----------", "---------XX----------", "---------------------", "-------------XXXX----", "---------------------", "-------XXXXX---------", "XXXX------------XXXXX"]],14));
MDP.addNode(new CustomNode("hv", -2.7, 0, false, [], [["-------XXXXXX--------", "-------XXXXXX--------", "-------XXXXXX--------", "-------XXXXXX--------", "-------XXXXXX--------", "-------XXXXXX--------", "---------------------", "---------------------", "-------V----V--------", "---------oo----------", "------XXXXXXXX-------", "---------------------", "-------o----o--------", "----X-----H----X-----", "XXXXXXXXXXXXXXXXXXXXX"], ["---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "---------------------", "------o------o-------", "---------------------", "------X---H--X-------", "XXX---XXXXXXXX-------", "---------------------", "-------oV--Vo--------", "----X----------X-----", "XXXXXXXXXXXXXXXXXXXXX"]],6));
MDP.addNode(new CustomNode("gap", -2.9, 0, false
MDP.addNode(new CustomNode("v", -2.8, 0, false
MDP.addNode(new CustomNode("l_v", -2.5, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "---------oo------", "-----------------", "-------^XXXX^----", "------X------X---", "-------V----V----", "---------oo------", "-----------------", "XXXXXXXXXXXXXXXXX"], ["------------------", "------------------", "------------------", "------------------", "------XX-----XX---", "------------------", "------------------", "-------V-----V----", "------V-------V---", "----------o-------", "-----XXXXXXXXXXX--", "------------------", "---------ooo------", "------------------", "XXXXXXXX^XXX^XXXXX"], ["-------------------", "-------------------", "-------------------", "-------------------", "-------------------", "-------------------", "-----------X-------", "-----------VX------", "------------VX-----", "-------------VX----", "--------------V----", "---X-X-------------", "---X^X-------------", "--XXXX-------------", "XXXXXXXXXXXXXXXXXXX"]],8));
MDP.addNode(new CustomNode("p_h", -1.0, 0, false, [], [["------------------XXX", "------------------XXX", "X-H---------------XXX", "-------------o----XXX", "------------------XXX", "-----------XXXX---XXX", "X------------H----XXX", "------------------XXX", "----XXXXXX--------XXX", "X------------H----XXX", "XXX------o--------XXX", "X-----------------H-X", "-----XXXXXXXX--------", "---------------------", "XXX-----------XXXXXXX"], ["X--H--------------XXX", "X-------Ho--------XXX", "X------------H----XXX", "XX----XXXXXXX-----XXX", "------------------XXX", "--------------XX--XXX", "--X-------H-------XXX", "------------------XXX", "o--XXX----H-------XXX", "------------------XXX", "X------------H----XXX", "---------------------", "---------------------", "---------------------", "XXX-------------XXXXX"]],15));
MDP.addNode(new CustomNode("p_l", -1.0, 0, false, [], [["------------------XXX", "------------------XXX", "------------------XXX", "------X------o----XXX", "------------------XXX", "--X--------XXXX---XXX", "------------------XXX", "------------------XXX", "-----XX^----------XXX", "------------------XXX", "XX-------o--------XXX", "---------------------", "-----^XXXX-----------", "---------------------", "XXX-----------XX^XXXX"], ["-------------------XXX", "---------o---------XXX", "-------------------XXX", "------X^XXXXX------XXX", "XX-----------------XXX", "--------------XX---XXX", "-------------------XXX", "-------------------XXX", "o--X^X-------------XXX", "-------------------XXX", "X------------------XXX", "----------------------", "----------------------", "----------------------", "XX^X------------^XXXXX"]],15));
MDP.addNode(new CustomNode("p_l_h", -1.7, 0, false, [], [["------------------------------", "------------------------------", "------oo--------o------------", "-----X^X--------H--------X^X-----", "----------XXX------XXX-----------", "X-----H-------------------------X", "X---------------H---------------X", "-------------XXXXXX--------------", "XX------------------------H----XX", "----------X----oo----X-----------", "----------X^X------X^X-----------", "XXX-----------XXXX------------XXX"]],16));
MDP.addNode(new CustomNode("p_l_v_h", -1.6, 0, false, [], [["-V--V-------------------------", "o-----------------------------", "------------------------------", "XXXXX------------o------------", "------------------------------", "-----------------X---H-H--H--X", "------XX^XX------XXXXXXXX-----", "------------------------------", "--------------X---------------", "------------------------------", "---------XX------V-----XXXXXXX", "------------------------------", "----XXX-----------------------", "----------------XXX^XX--------", "XXX------------------------XXX"], ["------------------------------", "------------------------------", "------------------------------", "---o--------------------------", "------------------------------", "---X--------------------------", "-------XX---------------------", "------------------------------", "-----------XXX----------------", "------------------------------", "-----------------XXX------X---", "------V----V--------------V---", "-------------X-X--------------", "--X-H-----H--X-X--------------", "XXXXXXXXXXXXXX^X-------X^XXXXX"]],18));
MDP.addNode(new CustomNode("end", -0.0, 0, true, [], [["------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "oooooooooooo", "XXXXXXXXXXXX"], ["------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "------------", "---ooooooooo", "XXXXXXXXXXXX"]],23));
MDP.addNode(new CustomNode("t_l", -2.2, 0, false
MDP.addNode(new CustomNode("t_h", -2.2, 0, false
MDP.addNode(new CustomNode("t_v", -2.2, 0, false
MDP.addNode(new CustomNode("t_l_h_v", -2.0, 0, false
MDP.addNode(new CustomNode("t_l_h", -2.1, 0, false
MDP.addNode(new CustomNode("t_h_v", -2.1, 0, false
MDP.addNode(new CustomNode("c_v", -2.2, 0, false, [], [["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "---V--C--V----", "--------------", "--------------", "XXXXXXXXXXXXXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "---V------V---", "------C-------", "--------------", "--------------", "---XXXXXXXX---", "XXXXXXXXXXXXXX"]],11));
MDP.addNode(new CustomNode("c_h", -2.2, 0, false, [], [["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "------C-------", "--------------", "--X---H---X---", "XXXXXXXXXXXXXX"], ["---------------", "---------------", "---------------", "---------------", "---------------", "---------------", "---------------", "---------------", "---------------", "---------------", "-------C-------", "---------------", "---------------", "---X---H---X---", "XXXXXXXXXXXXXXX"]],11));
MDP.addNode(new CustomNode("c_l", -2.2, 0, false
MDP.addNode(new CustomNode("c_l_h", -2.1, 0, false
MDP.addNode(new CustomNode("c_h_v", -2.1, 0, false
MDP.addNode(new CustomNode("c_l_h_v", -2.0, 0, false
MDP.addNode(new CustomNode("bb_v", -1.8, 0, false, [], [["-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "-------------", "----V---V----", "-------------", "------b------", "-------------", "XXX-------XXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-----V---V----", "--------------", "-------b------", "--------------", "--------------", "--XX-------XXX", "--X-----------", "XXX-----------"]],15));
MDP.addNode(new CustomNode("bb_l", -1.8, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "--------b--------", "-----------------", "XXX^X-------X^XXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-------b------", "--------------", "--------------", "--XX------X^XX", "--X-----------", "XXX-----------"]],15));
MDP.addNode(new CustomNode("bb_h", -1.8, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "--------b--------", "--X------H----X--", "XXXXX-------XXXXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-------b------", "X--------H---X", "--------------", "--XX-------XXX", "--X-----------", "XXX-----------"]],15));
MDP.addNode(new CustomNode("bb_l_h", -1.7, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "--------b--------", "--X------H----X--", "XXX^X-------X^XXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-------b------", "X--------H---X", "--------------", "--XX------X^XX", "--X-----------", "XXX-----------"]],16));
MDP.addNode(new CustomNode("bb_h_v", -1.7, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "------V---V------", "-----------------", "--------b--------", "--X------H----X--", "XXXXX-------XXXXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-----V---V----", "--------------", "-------b------", "X--------H---X", "--------------", "--XX-------XXX", "--X-----------", "XXX-----------"]],16));
MDP.addNode(new CustomNode("bb_l_h_v", -1.6, 0, false, [], [["-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "-----------------", "------V---V------", "-----------------", "--------b--------", "--X------H----X--", "XXX^X-------X^XXX"], ["--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "--------------", "-----V---V----", "--------------", "-------b------", "X--------H---X", "--------------", "--XX------X^XX", "--X-----------", "XXX-----------"]],17));
MDP.addNode(new CustomNode("easy", -1.5, 0, false
MDP.addNode(new CustomNode("bb_c_h_l_p_t", -1.4, 0, false, [], [["-----------XXX-------XXX---------------", "------------T---------T----------------", "---------------------------------------", "-----------------------------b---------", "--------C---o----C--o------------------", "---------XXXXXXXXXXXXX--C-------XX-----", "---------------------------------------", "--------------------b------------------", "--------------------------------XXXX---", "------------XXXX-------XXX-------------", "X-------H-------H-------H---------H---X", "XXXX----XXX-----------------XXXX-XXXXXX", "---------------------------------------", "---------------------------------------", "XXXXXXX------------------X^--XXX^X--XXX"], ["-XXX---------------XXX-----------------", "--T-----------------T------------------", "---------o---o-------------------------", "---------X---XX------------------------", "----------------------------C----------", "------------------XX-------------------", "---------------------------------------", "----------------------XXX--------------", "---------------------------------------", "----------------------------CXXX-------", "---------------------------------------", "-----------X-----H-----X-X-------------", "-----b-----X-----H-----X-X-------------", "-----------X-----H-----X^X-------------", "XXX------XXXXXXXXXXXXXXXXX----------XXX"]],19));
MDP.addNode(new CustomNode("bb_c_h_l_p_v", -1.4, 0, false, [], [["-----------XXX-------XXX----C----------", "--------C---V----X----V-------V--------", "---------------------------------------", "---------------------------------------", "------------o-------o------------------", "---------XXXXXXXXXXXXXXXXXXXXXXXXXV--V-", "---------------------------------------", "---------------------------------------", "--------------------------------XXXX---", "--------------b--b--b--b--b------------", "---------------------------------------", "XXXX----XXX------------------XXX-XXXXXX", "---------------------------------------", "------X-H-H-H-H-H-H-H-H-H-HX-----------", "XXXXXXX------------------XXX-XXX^X--XXX"], ["-XXX----------V----XXX-----------------", "--V-----------------V------------------", "---------o---o-------------------------", "---------X---XXX-----------------------", "----------------------------C----------", "------------------X---------------V----", "-----------V---------------------V-----", "----------------------XXX--------------", "---------------------------------------", "----------------------------CXXX-------", "---------------------------------------", "-----------X-----H-----X-X-------------", "-----b-----X-----H-----X-X-------------", "-----------X-----H-----X^X-------------", "XXX------XXXXXXXXXXXXXXXXX----------XXX"]],19));
MDP.addNode(new CustomNode("bb_c_h_p_t_v", -1.3, 0, false, [], [["-----------XXX-------XXX---------------", "------------T---------T----------------", "-----------V-V-------------------------", "---------------------------------------", "---------------------V-V---------------", "---------------------------------------", "-----------C-----------------------C---", "-------X-------H--------H-X------------", "-----XXXXXXXXXXXXXXXXXXXXXX------------", "---------------------------------------", "---b------------o------------XX--------", "---------------------------------------", "----------------X---X----XX------------", "---------------------------------------", "XXX---------------------------------XXX"], ["-------XXX-----XXX---------------------", "--------T-------T-----------o----------", "---------------------------------------", "----------------------------X----------", "----------------------------V----------", "--bXX-------------------X--------------", "--bXX-------------------V--------------", "--bXX----------------X-----------------", "--bXX----------------V-----------------", "--bXX-------C-----------XXX------------", "--bXX----------------------------------", "--bXX------------------------XXX-------", "--bXX----------------------------------", "---XX-----------H----H------H------X---", "XXXXX---XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"], ["-------XXX----V---V--V-----------------", "--------T------------------------------", "---------------------------------------", "---------------------------------------", "-------------------o-------------------", "--bXX----------------------------------", "--bXX--------------X-------------------", "--bXX----------------------------------", "--bXX-----C----X-----------------------", "--bXX----------------------------------", "--bXX-------------X--------------------", "--bXX-----------------X-------H----X---", "--bXX---------XX------X----H-------X---", "---XX-----------------X-H----------X---", "XXXXX---XXXX----------XXXXXXXXXXXXXXXXX"]],20));
MDP.addNode(new CustomNode("bb_c_l_p_t_v", -1.3, 0, false, [], [["-----------XXX-------XXX---------------", "------------T---------T----------------", "-----------V-V-------------------------", "---------------------------------------", "---------------------V-V---------------", "---------------------------------------", "-----------C-----------------------C---", "---------------------------------------", "-----XX^XXXXXXXXXXXXXXXXX^X------------", "---------------------------------------", "---b------------o------------XX--------", "---------------------------------------", "----------------X---X----XX------------", "---------------------------------------", "XXX---------------------------------XXX"], ["-------XXX-----XXX---------------------", "--------T-------T-----------o----------", "---------------------------------------", "----------------------------X----------", "----------------------------V----------", "--bXX-------------------X--------------", "--bXX-------------------V--------------", "--bXX----------------X-----------------", "--bXX----------------V-----------------", "--bXX-------------------XXX------------", "--bXX----------------------------------", "--bXX------------C---C--C----XXX-------", "--bXX----------------------------------", "---XX----------------------------------", "XXXXX---^XXXXXXXXXX^XXXXXXXXXXXXX^XXXXX"], ["-------XXX----V---V--V-----------------", "--------T------------------------------", "---------------------------------------", "---------------------------------------", "-------------------o-------------------", "--bXX----------------------------------", "--bXX--------------X-------------------", "--bXX----------------------------------", "--bXX----------X-----------------------", "--bXX----------------------------------", "--bXX-------------X--------------------", "--bXX----------------------C--C--------", "--bXX---------XX-----------------------", "---XX----------------------------------", "XXXXX---^XXX----------^XXXXXXXXXX^XXXXX"]],20));
MDP.addNode(new CustomNode("bb_h_l_p_t_v", -1.3, 0, false, [], [["-----------XXX-------XXX---------------", "------------T---------T----------------", "-----------V-V-------------------------", "---------------------------------------", "---------------------V-V---------------", "---------------------------------------", "---------------------------------------", "------X-------H------H----X------------", "-----XX^XXXXXXXXXXXXXXXXX^X------------", "---------------------------------------", "---b------------o------------XX--------", "---------------------------------------", "----------------X---X----XX------------", "---------------------------------------", "XXX---------------------------------XXX"], ["-------XXX-----XXX---------------------", "--------T-------T-----------o----------", "---------------------------------------", "----------------------------X----------", "----------------------------V----------", "--bXX-------------------X--------------", "--bXX-------------------V--------------", "--bXX----------------X-----------------", "--bXX----------------V-----------------", "--bXX-------------------XXX------------", "--bXX----------------------------------", "--bXX------------------------XXX-------", "--bXX----------------------------------", "---XX---------H-------H----H-------X---", "XXXXX---^XXXXXXXXXX^XXXXXXXXXXXXX^XXXXX"], ["-------XXX-----XXX---------------------", "--------T-------T-----------o----------", "---------------------------------------", "----------------------------X----------", "----------------------------V----------", "--bXX--------H----------X--------------", "--bXX----------------------------------", "--bXX--------H-------X-----------------", "--bXX----------------V-----------------", "--bXX-------------------XXX------------", "--bXX----------------------------------", "--bXX-------------------H----XXX-------", "--bXX----------------------------------", "---XX--------H-----------H---------X---", "XXXXX---^XXXXXXXXXX^XXXXXXXXXXXXX^XXXXX"], ["-------XXX----V---V--V-----------------", "--------T------------------------------", "---------------------------------------", "---------------------------------------", "-------------------o-------------------", "--bXX----------------------------------", "--bXX--------------X-------------------", "--bXX----------------------------------", "--bXX-----H------------X---------------", "--bXX----------------------------------", "--bXX--------------X-------------------", "--bXX----------------------------------", "--bXX-----H---XX-----------------------", "---XX----------------------------------", "XXXXX---^XXX----------^XXXXXXXXXX^XXXXX"]],20));
MDP.addNode(new CustomNode("c_h_l_p_t_v", -1.4, 0, false, [], [["-----------XXX-------XXX---------------", "--------C---T----C----T-------C--------", "---------------------------------------", "---------------------------------------", "------------o-------o------------------", "XXX------XXXXXXXXXXXXX---XXXXXXXXX-----", "-T-------------------------------------", "---------------V-----V-----------------", "--------------------------------XXXX---", "---------------------------------------", "X-------H-------------------------H---X", "XXXX----XXX---XXXX---XXXX---XXXX-XXXXXX", "---------------------------------------", "---------------------------------------", "XXXXXXX------------------X^--XXX^X--XXX"], ["-XXX--------------------------XXX------", "--T----------------------------T-------", "---------o---o
MDP.addNode(new CustomNode("easy_2", -1.2, 0, falseoo--------------------", "----X--------------------", "-------------------------", "-------------------------", "-------XX----------------", "-------------------------", "----------XXX------------", "-------------------------", "-------------------------", "----XXX------------------", "-------------------------", "-------------------------", "-------------------------", "XXXXXXXXXXXX---XXXXXXXXXX"]],21));
MDP.addNode(new CustomNode("hard", -1.1, 0, false, [], [["----------------------------------------XXXXXXXXXXXXXX------", "--------------------------V-------------X-T----T----T-------", "--o-----C----------C----o---------------X-----------------o-", "----------------------------------------X-------------------", "--X---------------------X-------------o-X-----------------X-", "-------------------------------b---b

// ========= Edges =========
MDP.addDefaultEdge("start", "1", [["1", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("l_h_v", "c", [["c", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("l_h_v", "t", [["t", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("l_h", "l_h_v", [["l_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("l_h", "l_v", [["l_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("jump", "gap", [["gap", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("h", "v", [["v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("h", "hv", [["hv", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("l", "l_v", [["l_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("l", "l_h", [["l_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c", "c_v", [["c_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c", "c_h", [["c_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c", "t", [["t", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c", "c_l", [["c_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t", "c", [["c", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t", "t_l", [["t_l", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t", "t_v", [["t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t", "t_h", [["t_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb", "bb_h", [["bb_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb", "bb_v", [["bb_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb", "bb_l", [["bb_l", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb", "p", [["p", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_v", "p_l", [["p_l", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_v", "p_h", [["p_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_v", "p_v_h", [["p_v_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("2", "jump", [["jump", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_v_h", "p_l_h", [["p_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_v_h", "p_l_v_h", [["p_l_v_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("1", "2", [["2", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p", "bb", [["bb", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p", "p_h", [["p_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p", "p_v", [["p_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p", "p_l", [["p_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("hv", "l", [["l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("gap", "v", [["v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("gap", "h", [["h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("v", "hv", [["hv", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("v", "h", [["h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("l_v", "l_h_v", [["l_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("l_v", "l_h", [["l_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_h", "p_v", [["p_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_h", "p_l_h", [["p_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_h", "p_v_h", [["p_v_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_h", "p_l", [["p_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_l", "p_l_h", [["p_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_l", "p_h", [["p_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_l", "p_v", [["p_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_l_h", "p_v_h", [["p_v_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_l_h", "p_l_v_h", [["p_l_v_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("p_l_v_h", "bb_l_h_v", [["bb_l_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("p_l_v_h", "easy", [["easy", 0.99], [KEY_DEATH, 0.01]]);


MDP.addDefaultEdge("t_l", "t_l_h", [["t_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l", "t_h_v", [["t_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l", "t_v", [["t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l", "t_h", [["t_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t_h", "t_l_h", [["t_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_h", "t_h_v", [["t_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_h", "t_v", [["t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t_v", "t_l_h", [["t_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_v", "t_h_v", [["t_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_v", "t_l", [["t_l", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_v", "t_h", [["t_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t_l_h_v", "p", [["p", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l_h_v", "bb", [["bb", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l_h_v", "c_l_h_v", [["c_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t_l_h", "t_h_v", [["t_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_l_h", "t_l_h_v", [["t_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("t_h_v", "t_l_h", [["t_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("t_h_v", "t_l_h_v", [["t_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_v", "c_l_h", [["c_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_v", "c_h", [["c_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_v", "c_h_v", [["c_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_v", "c_l", [["c_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_h", "c_v", [["c_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h", "c_l_h", [["c_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h", "c_h_v", [["c_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h", "c_l", [["c_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_l", "c_v", [["c_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l", "c_h", [["c_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l", "c_h_v", [["c_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l", "c_l_h", [["c_l_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_l_h", "c_h_v", [["c_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l_h", "c_l_h_v", [["c_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_h_v", "c_l_h", [["c_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h_v", "c_l_h_v", [["c_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_l_h_v", "p", [["p", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l_h_v", "bb", [["bb", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_l_h_v", "t_l_h_v", [["t_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_v", "bb_h", [["bb_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_v", "bb_l_h", [["bb_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_v", "bb_h_v", [["bb_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_v", "bb_l", [["bb_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_l", "bb_h", [["bb_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_l", "bb_h_v", [["bb_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_l", "bb_v", [["bb_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_l", "bb_l_h", [["bb_l_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_h", "bb_l_h", [["bb_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h", "bb_h_v", [["bb_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h", "bb_v", [["bb_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h", "bb_l", [["bb_l", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_l_h", "bb_l_h_v", [["bb_l_h_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_l_h", "bb_h_v", [["bb_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_h_v", "bb_l_h", [["bb_l_h", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h_v", "bb_l_h_v", [["bb_l_h_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_l_h_v", "easy", [["easy", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_l_h_v", "p_l_v_h", [["p_l_v_h", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("easy", "bb_c_h_l_p_t", [["bb_c_h_l_p_t", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("easy", "c_h_l_p_t_v", [["c_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("easy", "bb_c_h_l_p_v", [["bb_c_h_l_p_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_c_h_l_p_t", "bb_h_l_p_t_v", [["bb_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_t", "bb_c_l_p_t_v", [["bb_c_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_t", "c_h_l_p_t_v", [["c_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_t", "bb_c_h_l_p_v", [["bb_c_h_l_p_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_t", "bb_c_h_p_t_v", [["bb_c_h_p_t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_c_h_l_p_v", "bb_h_l_p_t_v", [["bb_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_v", "bb_c_l_p_t_v", [["bb_c_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_v", "c_h_l_p_t_v", [["c_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_v", "bb_c_h_l_p_t", [["bb_c_h_l_p_t", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_l_p_v", "bb_c_h_p_t_v", [["bb_c_h_p_t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_c_h_p_t_v", "bb_h_l_p_t_v", [["bb_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_p_t_v", "bb_c_l_p_t_v", [["bb_c_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_h_p_t_v", "easy_2", [["easy_2", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_c_l_p_t_v", "bb_h_l_p_t_v", [["bb_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_l_p_t_v", "easy_2", [["easy_2", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_c_l_p_t_v", "bb_c_h_p_t_v", [["bb_c_h_p_t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("bb_h_l_p_t_v", "bb_c_l_p_t_v", [["bb_c_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h_l_p_t_v", "easy_2", [["easy_2", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("bb_h_l_p_t_v", "bb_c_h_p_t_v", [["bb_c_h_p_t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("c_h_l_p_t_v", "bb_h_l_p_t_v", [["bb_h_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h_l_p_t_v", "bb_c_l_p_t_v", [["bb_c_l_p_t_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h_l_p_t_v", "bb_c_h_l_p_t", [["bb_c_h_l_p_t", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h_l_p_t_v", "bb_c_h_l_p_v", [["bb_c_h_l_p_v", 0.99], [KEY_DEATH, 0.01]]);
MDP.addDefaultEdge("c_h_l_p_t_v", "bb_c_h_p_t_v", [["bb_c_h_p_t_v", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("easy_2", "hard", [["hard", 0.99], [KEY_DEATH, 0.01]]);

MDP.addDefaultEdge("hard", "end", [["end", 0.99], [KEY_DEATH, 0.01]]);

