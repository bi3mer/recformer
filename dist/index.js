class tt{scenes={};registerScene(t,r){if(this.scenes[t]===void 0)this.scenes[t]=r;else console.error(`Key "${t}" for scene already exists! Scene not added to SceneManager.`)}getScene(t){return this.scenes[t]}}class y{changeScene;onExit(){this.changeScene=void 0,this._onExit()}}var Z="main menu",R="game",q="player won",m="transition",X="lost",J="won";var v=720,E=480,x=32,I=15,St=17,V=20,Q=30,wt=0.625,Nt=0.9375,_=31,k=31,z=0.96875,L=0.96875,Rt=16,_t=16,Tt=0.5,Ht=0.5,B=25,A=15,j=0.78125,Y=0.46875,rt=0.12109375,$t=3.875,P=0.6,kt=2,C="start",O="end",d="death";var W;((c)=>{c[c.LEFT=0]="LEFT";c[c.RIGHT=1]="RIGHT";c[c.DOWN=2]="DOWN";c[c.UP=3]="UP";c[c.A=4]="A";c[c.D=5]="D";c[c.E=6]="E";c[c.G=7]="G";c[c.H=8]="H";c[c.I=9]="I";c[c.Q=10]="Q";c[c.R=11]="R";c[c.S=12]="S";c[c.W=13]="W";c[c.SPACE=14]="SPACE";c[c.ESCAPE=15]="ESCAPE";c[c.ENTER=16]="ENTER";c[c.SHIFT=17]="SHIFT";c[c.INVALID=18]="INVALID"})(W||={});class h{static _keys=[];static init(){for(let t=0;t<Object.keys(W).length;++t)h._keys.push(!1);window.addEventListener("keydown",h.onKeyDown),window.addEventListener("keyup",h.onKeyUp)}static isKeyDown(...t){const r=t.length;for(let e=0;e<r;++e)if(h._keys[t[e]])return!0;return!1}static keyStrToKey(t){switch(t){case"Down":case"ArrowDown":return 2;case"Up":case"ArrowUp":return 3;case"Right":case"ArrowRight":return 1;case"Left":case"ArrowLeft":return 0;case" ":case"Space":return 14;case"Escape":return 15;case"a":case"A":return 4;case"e":case"E":return 6;case"s":case"S":return 12;case"d":case"D":return 5;case"w":case"W":return 13;case"r":case"R":return 11;case"q":case"Q":return 10;case"g":case"G":return 7;case"h":case"H":return 8;case"i":case"I":return 9;case"Shift":return 17;case"Enter":return 16;default:return console.warn(`Unhandled key: ${t}.`),18}}static onKeyDown(t){const r=h.keyStrToKey(t.key);if(h._keys[r]=!0,r==2||r==3||r==0||r==1)t.preventDefault();return!1}static onKeyUp(t){return h._keys[h.keyStrToKey(t.key)]=!1,!1}static clear(){for(let t=0;t<h._keys.length;++t)h._keys[t]=!1}}class g{x;y;constructor(t,r){this.x=t,this.y=r}copy(){return new g(this.x,this.y)}zero(){this.x=0,this.y=0}equals(t){return this.x==t.x&&this.y==t.y}add(t){return new g(this.x+t.x,this.y+t.y)}addInPlace(t){this.x+=t.x,this.y+=t.y}subtract(t){return new g(this.x-t.x,this.y-t.y)}subtractInPlace(t){this.x-=t.x,this.y-=t.y}scalarAdd(t){this.x+=t,this.y+=t}scalarSubtract(t){this.x-=t,this.y-=t}scalarMultiply(t){return new g(this.x*t,this.y*t)}scalarMultiplyInPlace(t){this.x*=t,this.y*=t}dot(t){return this.x*t.x+this.y+t.y}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}}var $="rgba(150,150,255,1)";var Ot=Math.floor(v/x)-1;class st extends y{ctx;transitionScene;fakePlayerPos;sign;constructor(t,r){super();this.ctx=t,this.transitionScene=r,this.fakePlayerPos=new g(10,(I-2)*x),this.sign=1}onEnter(){this.ctx.clearRect(0,0,v,E),this.ctx.fillStyle=$,this.ctx.font="48px Arial",this.ctx.fillText("Recformer",247,100),this.ctx.fillStyle="white",this.ctx.font="30px Arial",this.ctx.fillText("Press 'space' to start",220,E*0.55);const t=this.fakePlayerPos.y+x;this.ctx.strokeStyle="white";for(let r=0;r<25;++r)this.ctx.strokeRect(r*x,t,_,k);this.ctx.fillStyle=$}update(t){if(h.isKeyDown(14))this.transitionScene.targetScene=R,this.changeScene=m;const r=this.fakePlayerPos.x;if(r<1||r>Ot)this.sign*=-1;this.fakePlayerPos.x+=t*this.sign}render(){const t=this.fakePlayerPos.x*x,r=(I-2)*x;this.ctx.clearRect(0,this.fakePlayerPos.y,v,Q),this.ctx.fillRect(t,r,V,Q)}_onExit(){}}class et{startCol=0;endCol=0;offsetX=0;colsPerScreen=Math.ceil(v/x);update(t){const r=t-this.colsPerScreen/2;this.startCol=Math.max(0,Math.floor(r)),this.endCol=this.startCol+this.colsPerScreen,this.offsetX=-r*x+this.startCol*x}columnToScreen(t){return(t-this.startCol)*x+this.offsetX}rowToScreen(t){return t*x}}function zt(t,r,e,s){const{x:n,y:i}=t,o=n+r.x,f=i+r.y,l=e.x,b=e.y,w=l+s.x,N=b+s.y;return n<w&&o>l&&i<N&&f>b}class a{pos;size;type;dead=!1;velocity=new g(0,0);gravity=new g(0,100);constructor(t,r,e,s,n){this.pos=new g(t,r),this.size=new g(e,s),this.type=n}collision(t){if(zt(this.pos,this.size,t.pos,t.size))this.handleCollision(t),t.handleCollision(this)}physicsUpdate(t){this.velocity.addInPlace(this.gravity.scalarMultiply(t)),this.velocity.y=Math.min(this.velocity.y,30),this.pos.addInPlace(this.velocity.scalarMultiply(t))}}var M=0,S=1,G=2,T=3;var Wt=6,Ft=8,Ut=0.4;class nt extends a{movingRight=!1;movingLeft=!1;moveMod=0;jumpTime=0;squash=1;stretch=1;coinsCollected=0;maxColumn=0;constructor(t,r){super(t,r,wt,Nt,M)}update(t){if(this.pos.y>St){this.dead=!0,console.log("Player fell...");return}if(this.velocity.x=0,h.isKeyDown(5,1))this.movingRight=!0,this.velocity.x=Wt,this.moveMod=Math.min(Ft,this.moveMod+t);if(h.isKeyDown(4,0))if(this.movingRight)this.movingRight=!1,this.velocity.x=0;else this.movingLeft=!0,this.velocity.x=-Wt,this.moveMod=Math.min(Ft,this.moveMod+t);if(this.jumpTime<Ut&&h.isKeyDown(14,3)){if(this.jumpTime===0)this.velocity.y=-15;else if(this.jumpTime<0.2)this.velocity.y-=2;this.squash=Math.min(1.03,this.squash+0.01),this.stretch=Math.max(0.97,this.stretch-0.01),this.jumpTime+=t}else if(this.squash!=this.stretch)this.squash+=0.01,this.stretch-=0.01;this.maxColumn=Math.max(this.pos.x,this.maxColumn)}handleCollision(t){switch(t.type){case S:{const r=this.pos.add(this.size.scalarMultiply(0.5)),e=t.pos.add(t.size.scalarMultiply(0.5)),s=r.subtract(e);this.size.add(t.size).scalarMultiply(0.5);const i=Math.abs(Math.atan(s.y/s.x));if(!(i<0.96&&i>0.698)&&Math.abs(s.x/this.size.x)>Math.abs(s.y/this.size.y))if(s.x<0)this.pos.x=t.pos.x-this.size.x;else this.pos.x=t.pos.x+t.size.x;else if(s.y>0)this.pos.y=t.pos.y+t.size.y;else this.pos.y=t.pos.y-this.size.y,this.velocity.y=0,this.jumpTime=0,this.stretch=1.01,this.squash=0.99;break}case G:{++this.coinsCollected;break}case T:{this.dead=!0,console.log("Ran into an enemy! :/");break}default:{console.warn(`Player unhandled collision type: ${t.type}.`);break}}}render(t,r){t.fillStyle=$;const e=r.columnToScreen(this.pos.x),s=r.rowToScreen(this.pos.y),n=Q*this.squash,i=V*this.stretch;if(this.movingRight){let o=new Path2D;o.moveTo(e,s),o.lineTo(e-this.moveMod,s+n),o.lineTo(e+i-this.moveMod,s+n),o.lineTo(e+i,s),o.closePath(),t.fill(o,"evenodd"),this.movingRight=!1}else if(this.movingLeft){let o=new Path2D;o.moveTo(e,s),o.lineTo(e+this.moveMod,s+n),o.lineTo(e+i+this.moveMod,s+n),o.lineTo(e+i,s),o.closePath(),t.fill(o,"evenodd"),this.movingLeft=!1}else t.fillRect(e,s,i,n)}}class ot extends a{constructor(t,r){super(t,r,z,L,S)}update(t){}handleCollision(t){}render(t,r){t.strokeStyle="white",t.strokeRect(r.columnToScreen(this.pos.x),r.rowToScreen(this.pos.y),_,k)}}class it extends a{minY;maxY;yMod;constructor(t,r){super(t+0.25,r+0.25,Tt,Ht,G);this.gravity.y=0,this.yMod=Math.random()*0.5,this.maxY=r+0.3,this.minY=r+0.15,this.velocity.y=this.yMod}update(t){if(this.pos.y>=this.maxY)this.velocity.y=-this.yMod;else if(this.pos.y<=this.minY)this.velocity.y=this.yMod}handleCollision(t){if(t.type===M)this.dead=!0}render(t,r){t.fillStyle="yellow",t.fillRect(r.columnToScreen(this.pos.x),r.rowToScreen(this.pos.y),Rt,_t)}}class ut extends a{maxColumns;constructor(t,r,e){super(t+0.25,r+0.25,j,Y,T);this.velocity.x=3,this.gravity.y=0,this.maxColumns=e}update(t){if(this.pos.x<0||this.pos.x>this.maxColumns)this.velocity.x*=-1}handleCollision(t){if(t.type===S){const r=this.pos.add(this.size.scalarMultiply(0.5)),e=t.pos.add(t.size.scalarMultiply(0.5)),s=r.subtract(e);if(this.size.add(t.size).scalarMultiply(0.5),Math.abs(s.x/this.size.x)>Math.abs(s.y/this.size.y))if(this.velocity.x*=-1,s.x<0)this.pos.x=t.pos.x-this.size.x;else this.pos.x=t.pos.x+t.size.x}}render(t,r){t.fillStyle="red",t.fillRect(r.columnToScreen(this.pos.x),r.rowToScreen(this.pos.y),B,A)}}class ct extends a{constructor(t,r){super(t,r+0.1,Y,j,T);this.velocity.y=3,this.gravity.y=0,this.pos.x+=0.25}update(t){if(this.pos.y<0||this.pos.y>=I)this.velocity.y*=-1}handleCollision(t){if(t.type===S){const r=this.pos.add(this.size.scalarMultiply(0.5)),e=t.pos.add(t.size.scalarMultiply(0.5)),s=r.subtract(e);if(this.size.add(t.size).scalarMultiply(0.5),Math.abs(s.x/this.size.x)<Math.abs(s.y/this.size.y))if(this.velocity.y*=-1,s.y>0)this.pos.y=t.pos.y+t.size.y;else this.pos.y=t.pos.y-this.size.y}}render(t,r){t.fillStyle="red",t.fillRect(r.columnToScreen(this.pos.x),r.rowToScreen(this.pos.y),A,B)}}class ft{src;tgt;probability;constructor(t,r,e){this.src=t,this.tgt=r,this.probability=e}}class U{name;reward;utility;isTerminal;neighbors;constructor(t,r,e,s,n){this.name=t,this.reward=r,this.utility=e,this.isTerminal=s,this.neighbors=n}}class D{nodes;edges;constructor(){this.nodes={},this.edges={}}getNode(t){return this.nodes[t]}hasNode(t){return t in this.nodes}addNode(t){this.nodes[t.name]=t}addDefaultNode(t,r=1,e=0,s=!1,n=null){if(n==null)n=[];this.nodes[t]=new U(t,r,e,s,n)}removeNode(t){const r=[];for(let e of Object.values(this.edges)){if(e.src==t||e.tgt==t)r.push(e);const s=e.probability;let n=-1;for(let l=0;l<s.length;l++){const[b,w]=s[l];if(b==t){n=l;break}}if(n==-1)continue;const i=s[n][1];s.splice(n,1);const o=s.length,f=i/o;e.probability=s.map(([l,b])=>[l,b+f])}for(let e of r)this.removeEdge(e.src,e.tgt);delete this.nodes[t]}getEdge(t,r){return this.edges[`${t},${r}`]}hasEdge(t,r){return`${t},${r}`in this.edges}addEdge(t){this.edges[`${t.src},${t.tgt}`]=t;const r=this.nodes[t.src].neighbors;if(!r.includes(t.tgt))r.push(t.tgt)}addDefaultEdge(t,r,e=null){if(e==null)e=[[r,1]];this.addEdge(new ft(t,r,e))}removeEdge(t,r){const e=this.nodes[t],s=e.neighbors.indexOf(r);e.neighbors.splice(s,1),delete this.edges[`${t},${r}`]}neighbors(t){return this.nodes[t].neighbors}setNodeUtilities(t){for(let[r,e]of Object.entries(t))this.nodes[r].utility=e}utility(t){return this.nodes[t].utility}reward(t){return this.nodes[t].reward}isTerminal(t){return this.nodes[t].isTerminal}mapNodes(t){for(let r of Object.values(this.nodes))t(r)}mapEdges(t){for(let r of Object.values(this.edges))t(r)}}function H(t){return t[Math.floor(Math.random()*t.length)]}function F(t,r,e,s){const n=t.getEdge(r,e).probability,i=n.length;let o=0;for(let f=0;f<i;++f){const[l,b]=n[f];o+=b*(t.reward(l)+s*t.utility(l))}return o}function K(t,r,e){const s=t.getNode(r);if(s.isTerminal)return 0;const n=s.neighbors,i=n.length;let o=-1/0;for(let f=0;f<i;++f)o=Math.max(o,F(t,r,n[f],e));return o}function lt(t){for(let r in t.nodes)t.nodes[r].utility=0}function dt(t){const r={};for(let e in t.nodes)if(!t.getNode(e).isTerminal)r[e]=[...t.neighbors(e)];return r}function ht(t,r){const e={};for(let s in t.nodes){if(t.getNode(s).isTerminal)continue;let n=-1/0,i=[];for(let o of t.neighbors(s)){const f=F(t,s,o,r);if(f===n)i.push(o);else if(f>n)n=f,i.length=0,i.push(o)}e[s]=i}return e}function qt(t,r,e,s){for(let n=0;n<s;++n)for(let i in t.nodes){const o=t.getNode(i);if(!o.isTerminal)o.utility=F(t,i,H(r[i]),e)}}function Xt(t,r,e,s){for(let n=0;n<s;++n){const i={};for(let o in t.nodes)if(!t.getNode(o).isTerminal)i[o]=F(t,o,H(r[o]),e);t.setNodeUtilities(i)}}function Jt(t,r,e,s){for(let n=0;n<s;++n)for(let i in t.nodes)t.getNode(i).utility=K(t,i,e)}function Vt(t,r,e,s){for(let n=0;n<s;++n){const i={};for(let o in t.nodes)i[o]=K(t,o,e);t.setNodeUtilities(i)}}function Zt(t,r,e){let s=!1;for(let n in t.nodes){if(t.getNode(n).isTerminal)continue;let i=null,o=-1/0;for(let f of t.neighbors(n)){const l=F(t,n,f,e);if(l===o);else if(l>o)i=f,o=l}if(H(r[n])!==i)r[n].length=0,r[n].push(i),s=!0}return s}function pt(t,r,e=!1,s=!1,n=10,i=!0){if(i)lt(t);const o=dt(t);let f;if(e&&s)f=qt;else if(e&&!s)f=Xt;else if(!e&&s)f=Jt;else f=Vt;let l=!0;while(l)f(t,o,r,n),l=Zt(t,o,r);return f(t,o,r,n),Zt(t,o,r),ht(t,r)}class p extends U{visitedCount;sumPercentCompleted;depth;designerReward;playerReward;constructor(t,r,e,s,n,i){super(t,r,e,s,n);this.designerReward=r,this.playerReward=0,this.depth=i,this.visitedCount=1,this.sumPercentCompleted=1}updateReward(){this.reward=this.designerReward*this.visitedCount}}var u=new D;u.addNode(new p(C,0,0,!1,[],-1));u.addNode(new p(d,-1,0,!0,[],-1));u.addNode(new p(O,1,0,!0,[],-1));u.addNode(new p("1-a",-0.8,0,!1,[],1));u.addNode(new p("2-a",-0.7,0,!1,[],2));u.addNode(new p("2-b",-0.7,0,!1,[],2));u.addNode(new p("3-a",-0.6,0,!1,[],3));u.addNode(new p("3-b",-0.6,0,!1,[],3));u.addNode(new p("4-a",-0.3,0,!1,[],4));u.addNode(new p("4-b",-0.3,0,!1,[],4));u.addNode(new p("5-a",-0.2,0,!1,[],5));u.addNode(new p("5-b",-0.2,0,!1,[],5));u.addNode(new p("5-c",-0.2,0,!1,[],5));u.addNode(new p("6-a",-0.1,0,!1,[],6));u.addNode(new p("7-a",-0,0,!1,[],7));u.addNode(new p("6-b",-0.1,0,!1,[],6));u.addDefaultEdge(C,"1-a",[["1-a",0.99],[d,0.01]]);u.addDefaultEdge("1-a","2-a",[["2-a",0.99],[d,0.01]]);u.addDefaultEdge("1-a","2-b",[["2-b",0.99],[d,0.01]]);u.addDefaultEdge("1-a","3-b",[["3-b",0.99],[d,0.01]]);u.addDefaultEdge("2-a","3-b",[["3-b",0.99],[d,0.01]]);u.addDefaultEdge("2-a","3-a",[["3-a",0.99],[d,0.01]]);u.addDefaultEdge("2-b","3-a",[["3-a",0.99],[d,0.01]]);u.addDefaultEdge("3-a","4-a",[["4-a",0.99],[d,0.01]]);u.addDefaultEdge("3-a","4-b",[["4-b",0.99],[d,0.01]]);u.addDefaultEdge("3-b","4-a",[["4-a",0.99],[d,0.01]]);u.addDefaultEdge("3-b","4-b",[["4-b",0.99],[d,0.01]]);u.addDefaultEdge("4-a","5-a",[["5-a",0.99],[d,0.01]]);u.addDefaultEdge("4-a","5-b",[["5-b",0.99],[d,0.01]]);u.addDefaultEdge("4-a","5-c",[["5-c",0.99],[d,0.01]]);u.addDefaultEdge("4-b","5-a",[["5-a",0.99],[d,0.01]]);u.addDefaultEdge("4-b","5-b",[["5-b",0.99],[d,0.01]]);u.addDefaultEdge("5-a","6-a",[["6-a",0.99],[d,0.01]]);u.addDefaultEdge("5-a","6-b",[["6-b",0.99],[d,0.01]]);u.addDefaultEdge("5-b","6-b",[["6-b",0.99],[d,0.01]]);u.addDefaultEdge("5-b","6-a",[["6-a",0.99],[d,0.01]]);u.addDefaultEdge("5-c","6-a",[["6-a",0.99],[d,0.01]]);u.addDefaultEdge("5-c","6-b",[["6-b",0.99],[d,0.01]]);u.addDefaultEdge("6-a","7-a",[["7-a",0.99],[d,0.01]]);u.addDefaultEdge("7-a","end",[["end",0.99],[d,0.01]]);u.addDefaultEdge("6-b","7-a",[["7-a",0.99],[d,0.01]]);var Qt={"1-a":["----------------------","----------------------","----------------------","-----------------X----","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","--------------X-------","-----o-----o--X------o","XXXXXXXXXXXXXXXXX^XXXX"],"2-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-------XXXXXXXX-------","----------------------","-------V--o---V-----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],"2-b":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-----------o----------","--------------------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"3-a":["----------------------","----------------------","----------------------","----------------------","-----------o----------","----------------------","---------XXXXX--------","-----------o----------","----------------------","-------X-H-----X------","---XX--XXXXXXXXX--XX--","----------------------","-------V---o---V----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],"3-b":["----------------------","----------------------","----------------------","----------------------","----------o-----------","----------------------","--------XXXXX---------","--------V---V---------","----------o-----------","----------------------","------XXXXXXXXX-------","----------------------","----------o---------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"4-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------XXX---","-----------------V----","-------X---XX-----V---","------XX------o-V---o-","-----XXX--------------","XXXXXXXX---XXXXXXXXXXX"],"4-b":["--------------------XX","--------------------XX","--------------------XX","--------------------XX","--------------------XX","-----------X-H---o--XX","-----------------o--XX","---------o----------XX","-----------XXXXXXX--XX","--------------------XX","-------X------------XX","------XXX-----------XX","-----XXXXX-----------o","----XXXXXXX-----------","XXXXXXXXXXXXXXXX--XXXX"],"5-a":["--------XXXXXXXXXXXXXX--------","-------------------ooX--------","---------------------X--------","---------------------X--------","------------------XXXX--------","------------------X-----------","-----------o--XXXXX-----------","------------------------------","---------XX-----------------o-","------------------------------","--------------XX---XXX----XXXX","------------------------------","----------XX------------------","------------------------------","XXXXXXXX----------------------"],"5-b":["------------------------------","-o----------------------------","------------------------------","XXX---------------------------","------------------------------","-----XXX----------------------","------------------------------","-----------XXX----------------","-o--------------------------o-","------XXX---------------------","XXX-----------------------XXXX","------------XXX-------XX------","------------------XX----------","------------------------------","XXXXXXXX---XXXXX--------------"],"5-c":["o-----------------------------","------------------------------","X---XX------------------------","------------------------------","------------------------------","XX----------------------------","--------XXXXX-----------------","--------Xoo-------------------","XXX-----Xoo----o------------o-","--------X---------------------","--------XXX---XX----XX----XXXX","XXXX--------------------------","------------------------------","------------------------------","XXXXXXXX----------------------"],"6-a":["----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","-------oo---XXXXXXXX----------","-o----------XXXXXXXX----------","------XXXX--XXXXXXXX----------","--------------o---------------","XXXX--------------------------","-------------XXXX-----------o-","---------------------XX-------","XXXXXXXX-----------------XXXXX"],"7-a":["-------------------V---------------","-----------------o---o-------------","------------X-H------------H--XXX--","-----V------XXXXXXXXXXXXXXXXXXXXX--","--------XX----o--------------------","-----------------------------------","-----------XXXXXX---Ho-------------","-----------------------------------","-------------V------XX--------H----","-----------------------------------","XX--------o------XXXXX----H--------","-----------------------------------","---X----H----H-X-----------------o-","---XXXXXXXXXXXXX-------------------","XXXX--------------------------XXXXX"],end:["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----oooooooooooooooooo","XXXXXXXXXXXXXXXXXXXXXX"],"6-b":["----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX--o-------","-o--------XXXXXXXXXX----------","----------XXXXXXXXXX--X-------","----------XXXXXXXXXX----------","XXX-------XXXXXXXXXXX---------","------XX-----oooo-----------o-","------------------------------","XXXX--------XXXXXX---XX---XXXX"]};class bt{playerIsOnLastLevel=!1;keys;columnsPerLevel;lossesInARow=0;playerWonLastRound=!1;constructor(){}update(t,r){const e=this.keys.length,s=[];if(t){for(let i=0;i<e;++i)s.push(1);this.lossesInARow=0}else{let i=r;for(let o=0;o<e;++o)if(i>this.columnsPerLevel[o])s[o]=1,i-=this.columnsPerLevel[o];else{s[o]=i/this.columnsPerLevel[o];break}}const n=s.length;for(let i=0;i<n;++i){const o=s[i],f=this.keys[i],l=u.getNode(f);if(o===1){if(!u.hasEdge(C,f))u.addDefaultEdge(C,f,[[f,1],[d,0]])}++l.visitedCount,l.sumPercentCompleted+=o,l.updateReward();const b=l.sumPercentCompleted/l.visitedCount,w=1-b;u.mapEdges((N)=>{if(N.tgt===f)N.probability[0][1]=b,N.probability[1][1]=w})}if(!t){++this.lossesInARow;for(let i=0;i<this.lossesInARow;++i){const o=u.getNode(C).neighbors,f=o.length;if(f===1)break;let l="",b=-1e4;for(let w=0;w<f;++w){const N=o[w],Ct=u.getNode(N).depth;if(Ct>b)l=N,b=Ct}console.log("removing edge:",l,b),u.removeEdge(C,l)}console.log("=======================")}this.playerWonLastRound=t}get(t){const r=pt(u,0.95,!0,!0,20);if(this.columnsPerLevel=[],this.playerWonLastRound)this.keys=[H(r[C])];else this.keys=[C];for(let n=0;n<t;++n){const i=H(r[this.keys[n]]);if(this.keys.push(i),i===O)break}this.keys.splice(0,1),this.playerIsOnLastLevel=this.keys.includes(O);const e=Array(I).fill(""),s=this.keys.length;for(let n=0;n<s;++n){const i=Qt[this.keys[n]];this.columnsPerLevel.push(i[0].length);for(let o=0;o<I;++o)e[o]+=i[o]}return e}}class xt extends a{spawnLaser;vertical;color;time=0;state=0;constructor(t,r,e,s){super(t,r,z,L,S);this.spawnLaser=s,this.vertical=e,this.color="yellow",this.gravity.y=0}update(t){switch(this.time+=t,this.state){case 0:{if(this.time>=P)this.time=0,this.state=1,this.color="yellow";break}case 1:{if(this.time>=kt)this.time=0,this.state=0,this.color="red",this.spawnLaser();break}default:{console.error(`Should not be able to enter state ${this.state}`),this.state=0;break}}}handleCollision(t){}render(t,r){t.strokeStyle=this.color;const e=r.columnToScreen(this.pos.x),s=r.rowToScreen(this.pos.y),n=s+k;t.beginPath(),t.moveTo(e,n),t.lineTo(e+_/2,s),t.lineTo(e+_,n),t.lineTo(e,n),t.stroke(),t.strokeStyle="white",t.beginPath(),t.moveTo(e,s),t.lineTo(e+_,s),t.stroke()}}class at extends a{vertical;time=0;constructor(t,r,e,s){super(t+(z-rt)/2,r,rt,s,T);this.vertical=e,this.gravity.y=0}update(t){if(this.time+=t,this.time>=P)this.dead=!0}handleCollision(t){}render(t,r){t.fillRect(r.columnToScreen(this.pos.x),r.rowToScreen(this.pos.y+1),$t,-this.size.y*x)}}class vt extends y{ctx;transitionScene;camera;numCoins;levelDirector;staticEntities;dynamicEntities;constructor(t,r){super();this.ctx=t,this.transitionScene=r,this.camera=new et,this.levelDirector=new bt}onEnter(){this.dynamicEntities=[],this.staticEntities=[],this.numCoins=0,this.dynamicEntities.push(new nt(2,12));const t=this.levelDirector.get(2),r=t.length;if(r!==I){console.error("Level should have 15 rows!");return}const e=t[0].length;for(let s=0;s<r;++s){const n=t[s];if(e!==n.length){console.error(`Every row in the level should have the same number of columns! (${e} !== ${n.length}).`);return}for(let i=0;i<e;++i){const o=n[i];if(o==="X")this.staticEntities.push(new ot(i,s));else if(o==="^")this.dynamicEntities.push(new xt(i,s,!0,()=>{const f=this.raycastUp(new g(i,s)),l=f===null?I:s-f.pos.y-1;this.dynamicEntities.push(new at(i,s-1,!0,l))}));else if(o==="o")++this.numCoins,this.dynamicEntities.push(new it(i,s));else if(o==="H")this.dynamicEntities.push(new ut(i,s,e));else if(o==="V")this.dynamicEntities.push(new ct(i,s));else if(o!=="-")console.error(`Unhandled tile type: ${n[i]}`)}}}update(t){let r=this.dynamicEntities.length;const e=this.staticEntities.length;let s,n=0;for(;n<r;++n){const o=this.dynamicEntities[n];if(o.update(t),o.dead)this.dynamicEntities.splice(n,1),--n,--r;o.physicsUpdate(t);for(s=n+1;s<r;++s)o.collision(this.dynamicEntities[s]);for(s=0;s<e;++s)o.collision(this.staticEntities[s])}const i=this.dynamicEntities[0];if(i.coinsCollected>=this.numCoins)if(this.levelDirector.playerIsOnLastLevel)this.transitionScene.targetScene=q,this.changeScene=m;else this.transitionScene.targetScene=J,this.changeScene=m;if(i.dead)this.transitionScene.targetScene=X,this.changeScene=m}render(){this.ctx.clearRect(0,0,v,E),this.camera.update(this.dynamicEntities[0].pos.x);let t=this.staticEntities.length,r=0;for(;r<t;++r)this.staticEntities[r].render(this.ctx,this.camera);t=this.dynamicEntities.length;for(r=0;r<t;++r)this.dynamicEntities[r].render(this.ctx,this.camera)}_onExit(){const t=this.dynamicEntities[0];this.levelDirector.update(!t.dead,Math.floor(t.maxColumn))}raycastUp(t){const r=this.staticEntities.length;let e;while(t.y>=0){for(e=0;e<r;++e){const s=this.staticEntities[e];if(t.equals(s.pos))return s}--t.y}return null}}class gt extends y{ctx;constructor(t){super();this.ctx=t}onEnter(){this.ctx.clearRect(0,0,v,E),this.ctx.font="30px Arial",this.ctx.fillStyle="white",this.ctx.fillText("You won! Congratulations!",170,E/2)}update(t){}render(){}_onExit(){}}class yt extends y{targetScene=Z;timer=0;ctx;constructor(t){super();this.ctx=t}onEnter(){}update(t){if(this.timer+=t,this.timer>0.6)this.changeScene=this.targetScene}render(){const t=this.timer/0.5;this.ctx.fillStyle=`rgba(0,0,0, ${t})`,this.ctx.fillRect(0,0,v,E)}_onExit(){this.timer=0}}class mt extends y{ctx;transitionScene;constructor(t,r){super();this.ctx=t,this.transitionScene=r}onEnter(){h.clear(),this.ctx.fillStyle=$,this.ctx.font="48px Arial",this.ctx.fillText("YOU WON",250,200),this.ctx.fillStyle="white",this.ctx.font="30px Arial",this.ctx.fillText("Press 'space' to keep going.",180,400)}update(t){if(h.isKeyDown(14))this.transitionScene.targetScene=R,this.changeScene=m}render(){}_onExit(){}}class Et extends y{ctx;transitionScene;constructor(t,r){super();this.ctx=t,this.transitionScene=r}onEnter(){h.clear(),this.ctx.fillStyle="red",this.ctx.font="48px Arial",this.ctx.fillText("YOU LOST",243,200),this.ctx.fillStyle="white",this.ctx.font="30px Arial",this.ctx.fillText("Press 'space' to try again.",195,400)}update(t){if(h.isKeyDown(14))this.transitionScene.targetScene=R,this.changeScene=m}render(){}_onExit(){}}class It{canvas;ctx;currentScene;sceneManager;constructor(){this.canvas=document.createElement("canvas"),this.canvas.setAttribute("id","canvas"),this.canvas.width=v,this.canvas.height=E,this.ctx=this.canvas.getContext("2d"),document.getElementById("game").appendChild(this.canvas);const t=new yt(this.ctx);this.sceneManager=new tt,this.sceneManager.registerScene(Z,new st(this.ctx,t)),this.sceneManager.registerScene(R,new vt(this.ctx,t)),this.sceneManager.registerScene(q,new gt(this.ctx)),this.sceneManager.registerScene(m,t),this.sceneManager.registerScene(J,new mt(this.ctx,t)),this.sceneManager.registerScene(X,new Et(this.ctx,t)),this.currentScene=this.sceneManager.getScene(Z),this.currentScene.onEnter()}start(){let t=0;const r=(e)=>{const s=Math.min(0.05,(e-t)/1000);t=e,this.currentScene.update(s),this.currentScene.render();const n=this.currentScene.changeScene;if(n!==void 0)this.currentScene.onExit(),this.currentScene=this.sceneManager.getScene(n),this.currentScene.onEnter();window.requestAnimationFrame(r)};window.requestAnimationFrame(r)}}window.addEventListener("load",()=>{h.init(),new It().start()});
